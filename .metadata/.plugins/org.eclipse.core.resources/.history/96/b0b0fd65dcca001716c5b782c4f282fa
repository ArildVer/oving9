#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>
#include <errno.h>
#include <string.h>
#include <fcntl.h>
#include <sys/dispatch.h>
#include <sys/mman.h>

struct pid_data{
	pthread_mutex_t pid_mutex;
	pid_t pid;
};

struct test{
	int t1;
	int t2;
};

int main(int argc, char *argv[]) {
	printf("Reading memloc\n");

	int file_desc = shm_open("/sharedpid", O_RDWR,S_IRWXU);
	void * mmap_test = mmap(0, sizeof(struct pid_data),PROT_READ|PROT_WRITE, MAP_SHARED, file_desc, 0);
	struct pid_data * nmb = mmap_test;

	printf("pid = %i", nmb->pid);

	int ch_id = ConnectAttach(0, nmb->pid, 1, 0 ,0);
	struct test msg = {5, 10};
	struct test buffer;
	int status = MsgSend(ch_id, &msg, sizeof(struct test), &buffer, sizeof(struct test));
	COnnectDetach(ch_id);

	printf("Status = %i, msg->t1 = %i", status, buffer.t1);

	return EXIT_SUCCESS;
}
